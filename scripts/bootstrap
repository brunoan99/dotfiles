#!/bin/bash
#
# bootstrap installs tools

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd -P)

set -e

echo ""

info () {
    printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
    printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
    printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
    printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
    echo ""
    exit
}

setup_tools () {
  # by default i"m sourcing for arch packages.
  # in future if u go use another os dismember that
  # to setup_tools_arch...
  info "Installing packages"
  declare -a packages=("curl" "wget" "git" "zsh"
  "archlinux-keyring" "autoconf" "automake" "binutils" "bison"
  "debugedit" "fakeroot" "file" "findutils" "flex" "gawk"
  "gcc" "gettext" "grep" "groff" "gzip" "libtool" "m4" "make"
  "pacman" "patch" "pkgconf" "sed" "sudo" "texinfo" "which")
  for package in "${packages[@]}"
  do
    if ! pacman -Qi $package > /dev/null 2>&1 ; then
      sudo pacman -S $package
      success "$package installed"
    else
          info "$package already installed"
    fi
  done
  success "Packages Success"
}

setup_wsl () {
  if [[ $(uname -srm) == *microsoft* 
      || $(uname -srm) == *Microsoft*  ]];
  then
    info "Running on Wsl, keeping wsl folder"
  else
    info "Running out of Wsl, removing wsl folder"
    rm -rf $DOT/wsl
    success "Folder removed successfully"
  fi
}

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]
      then

        skip=true;

      else

        user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac

      fi

    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]
    then
      info "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink' -not -path '*.git*')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}


success "Setup Started"
setup_tools
install_dotfiles
setup_wsl
success "Setup Completed"

echo ""
info "Starting Installations"
/bin/bash $DOT/scripts/install
success "Installations Completed"